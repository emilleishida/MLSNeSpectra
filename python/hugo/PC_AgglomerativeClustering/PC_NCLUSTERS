#!/usr/bin/env bash

# reduction and clustering method
RED='pca'
CLUST='AgglomerativeClustering'

SIM='0 1 2 3 4 5 6'		# Simulations
PAR1='2 3 4' 			# PC
PAR2='2 3 4 5 6 7 8'		# nclusters

PWD=$(pwd)

# source pipeline
cd $PWD/../../../pipeline && . SOURCE_ME && cd -

echo '***************************************' > summary.dat

for S in $SIM;
do
    mkdir -p sim${S}
    cd sim${S}
    for P1 in $PAR1
    do
	for P2 in $PAR2
	do
	    CONF="
#####################################################################################
'''
Original data:
	Used for the reduction,
	not needed if doing clusreing only
'''
ORG_DATA			= '${PWD}/../../../SN_simulator/simulated_data/${S}/derivatives.dat'

#####################################################################################
'''
REDUCTION METHOD
	possibilities:
		-pca
	The aditional parameters must be added with the same name
	as in the original function plus the prefix REDUCTION_METHOD'_'.
	Example:
		if REDUCTION_METHOD is 'pca', the parameter
		n_components must be declared as 
			pca_n_components= ...
		if REDUCTION_METHOD is 'empca', the parameter
		error_file can be declared as 
			empca_errors_file= ...
                in order to run with weights=1/errors^2. Its default value is
                None, so empca runs without weights
'''
REDUCTION_METHOD	= '${RED}'
pca_n_components = ${P1}

#####################################################################################
'''
CLUSTERING METHOD
	possibilities:
		-MeanShift
		-KMeans
		-AffinityPropagation
		-AgglomerativeClustering
		-DBSCAN

	The aditional parameters must be added with the same name
	as in the original function plus the prefix CLUSTERING_METHOD'_'
	Example:
		if CLUSTERING_METHOD is 'MeanShift', the parameter 
		quantile must be declared as 
			MeanShift_quantile= ...

'''
CLUSTERING_METHOD	= '${CLUST}'
AgglomerativeClustering_n_clusters = ${P2}

#####################################################################################
'''
CLUSTERING OUTPUT EXTENSIONS
	extension of output plots produced by pylab
'''
PLOT_EXT	= '.png'
PLOT_SPEC_EXT   = '.png'

#####################################################################################
'''
QUALITY TEST METHODS
	put one or more (as a vector) quality checks for clustering. possibilities are:
		-silhouette_index
		-Dunn_index
		-DavisBouldin_index
		-vrc

'''
QUALITY_METHODS=['silhouette_index','Dunn_index','DavisBouldin_index','vrc']

#####################################################################################
'''
CLUSTERING INPUT DATA
	add this ONLY if you want to use a external data source for the clustering,
	if you want to use the data from the pipeline leave it commented.
	Be aware that this data will also go into the plotting.
'''
#REDUCED_DATA_EXTERNAL		= '../empca_trained_coeff/coefficients.dat'

#####################################################################################
'''
PLOTTING INPUT DATA
	add this ONLY if you want to use a external data source of the clusters for the plotting,
	if you want to use the data from the pipeline leave it commented.
	You can also add an external file with different label to set different colors
	to the reduced data. The default color scheme is according to each parent cluster.
'''
#CLUSTERS_DATA_EXTERNAL		= '../empca_trained_coeff/coefficients.dat'
#LABELS_DATA_EXTERNAL		= '../empca_trained_coeff/coefficients.dat'
"
	    # define config file
	    echo "$CONF" > config.py
	    # run pipeline
	    ALL
	    # save quality and clustering results
	    mv -v info/quality.info info/quality_${P1}pc_${P2}groups.info
	    mv -v cl_data/clustering_AgglomerativeClustering.dat cl_data/clustering_AgglomerativeClustering_${P1}pc_${P2}groups.dat
	    mv -v cl_data/clustering_AgglomerativeClustering_label.dat cl_data/clustering_AgglomerativeClustering_label_${P1}pc_${P2}groups.dat
	done

	# save reduction results
	mv -v red_data/reduced_data_pca.dat red_data/reduced_data_${P1}pc.dat
    done

    # summarize results
    python ../summary.py

    # clean
    rm -fr plots
    rm -f info/quality.info info/clustering.info info/reduction.info info/plot.info

    cd ../

    # append to total summary
    echo 'Simulation '${S}'' >> summary.dat
    echo '' >> summary.dat
    tail -4 sim${S}/summary.dat >> summary.dat
    echo '' >> summary.dat
    echo '***************************************' >> summary.dat
done
exit
